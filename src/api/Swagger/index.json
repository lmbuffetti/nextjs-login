{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "Recipe Book API",
    "description": "Recipe Book API documentation using swagger.",
    "contact": {
      "email": "mattia.buffetti@gmail.com"
    }
  },
  "servers": [
    {
      "url": "https://recipebook-lemon.vercel.app",
      "description": "Production server"
    },
    {
      "url": "http://localhost:3000",
      "description": "Development server"
    }
  ],
  "basePath": "/api",
  "paths": {
    "/auth/register": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Create a new user",
        "description": "Create a new user",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "user",
            "description": "The user to create.",
            "schema": {
              "type": "object",
              "required": [
                "email"
              ],
              "properties": {
                "name": {
                  "type": "string"
                },
                "email": {
                  "type": "string"
                },
                "password": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User saved successfully",
            "schema": {
              "type": "object",
              "$ref": "#/definitions/User"
            }
          },
          "400": {
            "description": "Error in saving user",
            "schema": {
              "type": "object",
              "$ref": "#/definitions/CommonErrorResponse"
            }
          },
          "500": {
            "description": "Error in saving user",
            "schema": {
              "type": "object",
              "$ref": "#/definitions/CommonErrorResponse"
            }
          }
        }
      }
    },
    "/users/{id}": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Get a user",
        "description": "Get a user with the id specified in parameter",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "User id that needs to be fetched",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "User fetched successfully",
            "schema": {
              "type": "object",
              "$ref": "#/definitions/User"
            }
          },
          "400": {
            "description": "Error in fetching user",
            "schema": {
              "type": "object",
              "$ref": "#/definitions/CommonErrorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "User"
        ],
        "summary": "Update a user",
        "description": "Update a user",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "User id that needs to be updated",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "User object",
            "required": true,
            "schema": {
              "type": "object",
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User updated successfully",
            "schema": {
              "type": "object",
              "$ref": "#/definitions/CommonResponse"
            }
          },
          "400": {
            "description": "Error in updating user",
            "schema": {
              "type": "object",
              "$ref": "#/definitions/CommonErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "User"
        ],
        "summary": "Delete a user",
        "description": "Delete a user with the id specified in parameter",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "User id that needs to be deleted",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "User deleted successfully",
            "schema": {
              "type": "object",
              "$ref": "#/definitions/CommonResponse"
            }
          },
          "400": {
            "description": "Error in deleting user",
            "schema": {
              "type": "object",
              "$ref": "#/definitions/CommonErrorResponse"
            }
          }
        }
      }
    },
    "/users/list": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Get all the contacts",
        "description": "Get all the contacts",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "description": "The user to create.",
            "schema": {
              "type": "object",
              "required": [
                "email"
              ],
              "properties": {
                "page": null
              }
            }
          },
          {
            "in": "query",
            "name": "limit",
            "description": "The user to create.",
            "schema": {
              "type": "object",
              "required": [
                "email"
              ],
              "properties": {
                "page": null
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Contacts fetched successfully",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/User"
                    }
                  },
                  "page": {
                    "type": "number"
                  },
                  "limit": {
                    "type": "number"
                  },
                  "total": {
                    "type": "number"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Error in fetching contacts",
            "schema": {
              "type": "object",
              "$ref": "#/definitions/CommonResponse"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "CommonResponse": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        }
      }
    },
    "CommonErrorResponse": {
      "type": "object",
      "properties": {
        "error": {
          "type": "object",
          "properties": {
            "code": {
              "type": "number"
            },
            "message": {
              "type": "string"
            },
            "keyValues": {
              "type": "object"
            }
          }
        },
        "success": {
          "type": "boolean"
        }
      }
    },
    "User": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "role": {
          "type": "string"
        }
      }
    }
  }
}
